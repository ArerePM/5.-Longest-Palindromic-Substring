class Solution:
    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        if n==0 or n==1:
            return s
        dp = [[0] * n for i in range(n)]
        row = 0
        col = 0
        for i in range(n):
            dp[i][i]=1
        for i in range(n-1):
            if s[i]==s[i+1]:
                dp[i][i+1]=1
                row = i
                col = i+1
        for k in range(2, n):
            for i in range(n - 2):
                j = i + k
                # break the loop if it exceeds the boundaries of the matrix
                if j == n:
                    break
                if s[i]==s[j] and dp[i+1][j-1]==1:
                    dp[i][j] = 1
                    if j-i > col-row:
                        row = i
                        col = j
        return s[row:col+1]
            
                
